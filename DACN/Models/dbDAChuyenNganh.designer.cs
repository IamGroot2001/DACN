#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DACN.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DAChuyenNganh")]
	public partial class dbDAChuyenNganhDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCHUC_VU(CHUC_VU instance);
    partial void UpdateCHUC_VU(CHUC_VU instance);
    partial void DeleteCHUC_VU(CHUC_VU instance);
    partial void InsertCT_DONHANG(CT_DONHANG instance);
    partial void UpdateCT_DONHANG(CT_DONHANG instance);
    partial void DeleteCT_DONHANG(CT_DONHANG instance);
    partial void InsertCT_SANPHAM(CT_SANPHAM instance);
    partial void UpdateCT_SANPHAM(CT_SANPHAM instance);
    partial void DeleteCT_SANPHAM(CT_SANPHAM instance);
    partial void InsertDON_HANG(DON_HANG instance);
    partial void UpdateDON_HANG(DON_HANG instance);
    partial void DeleteDON_HANG(DON_HANG instance);
    partial void InsertKHACH_HANG(KHACH_HANG instance);
    partial void UpdateKHACH_HANG(KHACH_HANG instance);
    partial void DeleteKHACH_HANG(KHACH_HANG instance);
    partial void InsertLOAI_SAN_PHAM(LOAI_SAN_PHAM instance);
    partial void UpdateLOAI_SAN_PHAM(LOAI_SAN_PHAM instance);
    partial void DeleteLOAI_SAN_PHAM(LOAI_SAN_PHAM instance);
    partial void InsertNHAN_VIEN(NHAN_VIEN instance);
    partial void UpdateNHAN_VIEN(NHAN_VIEN instance);
    partial void DeleteNHAN_VIEN(NHAN_VIEN instance);
    partial void InsertPHUONG_THUC_THANH_TOAN(PHUONG_THUC_THANH_TOAN instance);
    partial void UpdatePHUONG_THUC_THANH_TOAN(PHUONG_THUC_THANH_TOAN instance);
    partial void DeletePHUONG_THUC_THANH_TOAN(PHUONG_THUC_THANH_TOAN instance);
    partial void InsertSAN_PHAM(SAN_PHAM instance);
    partial void UpdateSAN_PHAM(SAN_PHAM instance);
    partial void DeleteSAN_PHAM(SAN_PHAM instance);
    partial void InsertSIZE(SIZE instance);
    partial void UpdateSIZE(SIZE instance);
    partial void DeleteSIZE(SIZE instance);
		#endregion
		public dbDAChuyenNganhDataContext() :
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DAChuyenNganhConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}

		public dbDAChuyenNganhDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDAChuyenNganhDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDAChuyenNganhDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDAChuyenNganhDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CHUC_VU> CHUC_VUs
		{
			get
			{
				return this.GetTable<CHUC_VU>();
			}
		}
		
		public System.Data.Linq.Table<CT_DONHANG> CT_DONHANGs
		{
			get
			{
				return this.GetTable<CT_DONHANG>();
			}
		}
		
		public System.Data.Linq.Table<CT_SANPHAM> CT_SANPHAMs
		{
			get
			{
				return this.GetTable<CT_SANPHAM>();
			}
		}
		
		public System.Data.Linq.Table<DON_HANG> DON_HANGs
		{
			get
			{
				return this.GetTable<DON_HANG>();
			}
		}
		
		public System.Data.Linq.Table<KHACH_HANG> KHACH_HANGs
		{
			get
			{
				return this.GetTable<KHACH_HANG>();
			}
		}
		
		public System.Data.Linq.Table<LOAI_SAN_PHAM> LOAI_SAN_PHAMs
		{
			get
			{
				return this.GetTable<LOAI_SAN_PHAM>();
			}
		}
		
		public System.Data.Linq.Table<NHAN_VIEN> NHAN_VIENs
		{
			get
			{
				return this.GetTable<NHAN_VIEN>();
			}
		}
		
		public System.Data.Linq.Table<PHUONG_THUC_THANH_TOAN> PHUONG_THUC_THANH_TOANs
		{
			get
			{
				return this.GetTable<PHUONG_THUC_THANH_TOAN>();
			}
		}
		
		public System.Data.Linq.Table<SAN_PHAM> SAN_PHAMs
		{
			get
			{
				return this.GetTable<SAN_PHAM>();
			}
		}
		
		public System.Data.Linq.Table<SIZE> SIZEs
		{
			get
			{
				return this.GetTable<SIZE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CHUC_VU")]
	public partial class CHUC_VU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaCV;
		
		private string _TenCV;
		
		private EntitySet<NHAN_VIEN> _NHAN_VIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaCVChanging(int value);
    partial void OnMaCVChanged();
    partial void OnTenCVChanging(string value);
    partial void OnTenCVChanged();
    #endregion
		
		public CHUC_VU()
		{
			this._NHAN_VIENs = new EntitySet<NHAN_VIEN>(new Action<NHAN_VIEN>(this.attach_NHAN_VIENs), new Action<NHAN_VIEN>(this.detach_NHAN_VIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaCV
		{
			get
			{
				return this._MaCV;
			}
			set
			{
				if ((this._MaCV != value))
				{
					this.OnMaCVChanging(value);
					this.SendPropertyChanging();
					this._MaCV = value;
					this.SendPropertyChanged("MaCV");
					this.OnMaCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCV", DbType="NVarChar(50)")]
		public string TenCV
		{
			get
			{
				return this._TenCV;
			}
			set
			{
				if ((this._TenCV != value))
				{
					this.OnTenCVChanging(value);
					this.SendPropertyChanging();
					this._TenCV = value;
					this.SendPropertyChanged("TenCV");
					this.OnTenCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUC_VU_NHAN_VIEN", Storage="_NHAN_VIENs", ThisKey="MaCV", OtherKey="MaCV")]
		public EntitySet<NHAN_VIEN> NHAN_VIENs
		{
			get
			{
				return this._NHAN_VIENs;
			}
			set
			{
				this._NHAN_VIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NHAN_VIENs(NHAN_VIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUC_VU = this;
		}
		
		private void detach_NHAN_VIENs(NHAN_VIEN entity)
		{
			this.SendPropertyChanging();
			entity.CHUC_VU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_DONHANG")]
	public partial class CT_DONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDH;
		
		private int _MaSP;
		
		private string _MaSize;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<int> _ThanhTien;
		
		private EntityRef<CT_SANPHAM> _CT_SANPHAM;
		
		private EntityRef<DON_HANG> _DON_HANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDHChanging(int value);
    partial void OnMaDHChanged();
    partial void OnMaSPChanging(int value);
    partial void OnMaSPChanged();
    partial void OnMaSizeChanging(string value);
    partial void OnMaSizeChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnThanhTienChanging(System.Nullable<int> value);
    partial void OnThanhTienChanged();
    #endregion
		
		public CT_DONHANG()
		{
			this._CT_SANPHAM = default(EntityRef<CT_SANPHAM>);
			this._DON_HANG = default(EntityRef<DON_HANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					if (this._DON_HANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._CT_SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSize", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSize
		{
			get
			{
				return this._MaSize;
			}
			set
			{
				if ((this._MaSize != value))
				{
					if (this._CT_SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSizeChanging(value);
					this.SendPropertyChanging();
					this._MaSize = value;
					this.SendPropertyChanged("MaSize");
					this.OnMaSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Int")]
		public System.Nullable<int> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CT_SANPHAM_CT_DONHANG", Storage="_CT_SANPHAM", ThisKey="MaSP,MaSize", OtherKey="MaSP,MaSize", IsForeignKey=true)]
		public CT_SANPHAM CT_SANPHAM
		{
			get
			{
				return this._CT_SANPHAM.Entity;
			}
			set
			{
				CT_SANPHAM previousValue = this._CT_SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._CT_SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CT_SANPHAM.Entity = null;
						previousValue.CT_DONHANGs.Remove(this);
					}
					this._CT_SANPHAM.Entity = value;
					if ((value != null))
					{
						value.CT_DONHANGs.Add(this);
						this._MaSP = value.MaSP;
						this._MaSize = value.MaSize;
					}
					else
					{
						this._MaSP = default(int);
						this._MaSize = default(string);
					}
					this.SendPropertyChanged("CT_SANPHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DON_HANG_CT_DONHANG", Storage="_DON_HANG", ThisKey="MaDH", OtherKey="MaDH", IsForeignKey=true)]
		public DON_HANG DON_HANG
		{
			get
			{
				return this._DON_HANG.Entity;
			}
			set
			{
				DON_HANG previousValue = this._DON_HANG.Entity;
				if (((previousValue != value) 
							|| (this._DON_HANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DON_HANG.Entity = null;
						previousValue.CT_DONHANGs.Remove(this);
					}
					this._DON_HANG.Entity = value;
					if ((value != null))
					{
						value.CT_DONHANGs.Add(this);
						this._MaDH = value.MaDH;
					}
					else
					{
						this._MaDH = default(int);
					}
					this.SendPropertyChanged("DON_HANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_SANPHAM")]
	public partial class CT_SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSP;
		
		private string _MaSize;
		
		private System.Nullable<int> _SoLuong;
		
		private EntitySet<CT_DONHANG> _CT_DONHANGs;
		
		private EntityRef<SAN_PHAM> _SAN_PHAM;
		
		private EntityRef<SIZE> _SIZE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(int value);
    partial void OnMaSPChanged();
    partial void OnMaSizeChanging(string value);
    partial void OnMaSizeChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    #endregion
		
		public CT_SANPHAM()
		{
			this._CT_DONHANGs = new EntitySet<CT_DONHANG>(new Action<CT_DONHANG>(this.attach_CT_DONHANGs), new Action<CT_DONHANG>(this.detach_CT_DONHANGs));
			this._SAN_PHAM = default(EntityRef<SAN_PHAM>);
			this._SIZE = default(EntityRef<SIZE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._SAN_PHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSize", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSize
		{
			get
			{
				return this._MaSize;
			}
			set
			{
				if ((this._MaSize != value))
				{
					if (this._SIZE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSizeChanging(value);
					this.SendPropertyChanging();
					this._MaSize = value;
					this.SendPropertyChanged("MaSize");
					this.OnMaSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CT_SANPHAM_CT_DONHANG", Storage="_CT_DONHANGs", ThisKey="MaSP,MaSize", OtherKey="MaSP,MaSize")]
		public EntitySet<CT_DONHANG> CT_DONHANGs
		{
			get
			{
				return this._CT_DONHANGs;
			}
			set
			{
				this._CT_DONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SAN_PHAM_CT_SANPHAM", Storage="_SAN_PHAM", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public SAN_PHAM SAN_PHAM
		{
			get
			{
				return this._SAN_PHAM.Entity;
			}
			set
			{
				SAN_PHAM previousValue = this._SAN_PHAM.Entity;
				if (((previousValue != value) 
							|| (this._SAN_PHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SAN_PHAM.Entity = null;
						previousValue.CT_SANPHAMs.Remove(this);
					}
					this._SAN_PHAM.Entity = value;
					if ((value != null))
					{
						value.CT_SANPHAMs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(int);
					}
					this.SendPropertyChanged("SAN_PHAM");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIZE_CT_SANPHAM", Storage="_SIZE", ThisKey="MaSize", OtherKey="MaSize", IsForeignKey=true)]
		public SIZE SIZE
		{
			get
			{
				return this._SIZE.Entity;
			}
			set
			{
				SIZE previousValue = this._SIZE.Entity;
				if (((previousValue != value) 
							|| (this._SIZE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SIZE.Entity = null;
						previousValue.CT_SANPHAMs.Remove(this);
					}
					this._SIZE.Entity = value;
					if ((value != null))
					{
						value.CT_SANPHAMs.Add(this);
						this._MaSize = value.MaSize;
					}
					else
					{
						this._MaSize = default(string);
					}
					this.SendPropertyChanged("SIZE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DONHANGs(CT_DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.CT_SANPHAM = this;
		}
		
		private void detach_CT_DONHANGs(CT_DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.CT_SANPHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DON_HANG")]
	public partial class DON_HANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDH;
		
		private System.Nullable<System.DateTime> _NgayLap;
		
		private string _DiaChiNhanHang;
		
		private System.Nullable<bool> _TrangThaiDonHang;
		
		private string _TaiKhoanKH;
		
		private int _MaPTTT;
		
		private string _TaiKhoanNV;
		
		private EntitySet<CT_DONHANG> _CT_DONHANGs;
		
		private EntityRef<KHACH_HANG> _KHACH_HANG;
		
		private EntityRef<NHAN_VIEN> _NHAN_VIEN;
		
		private EntityRef<PHUONG_THUC_THANH_TOAN> _PHUONG_THUC_THANH_TOAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDHChanging(int value);
    partial void OnMaDHChanged();
    partial void OnNgayLapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayLapChanged();
    partial void OnDiaChiNhanHangChanging(string value);
    partial void OnDiaChiNhanHangChanged();
    partial void OnTrangThaiDonHangChanging(System.Nullable<bool> value);
    partial void OnTrangThaiDonHangChanged();
    partial void OnTaiKhoanKHChanging(string value);
    partial void OnTaiKhoanKHChanged();
    partial void OnMaPTTTChanging(int value);
    partial void OnMaPTTTChanged();
    partial void OnTaiKhoanNVChanging(string value);
    partial void OnTaiKhoanNVChanged();
    #endregion
		
		public DON_HANG()
		{
			this._CT_DONHANGs = new EntitySet<CT_DONHANG>(new Action<CT_DONHANG>(this.attach_CT_DONHANGs), new Action<CT_DONHANG>(this.detach_CT_DONHANGs));
			this._KHACH_HANG = default(EntityRef<KHACH_HANG>);
			this._NHAN_VIEN = default(EntityRef<NHAN_VIEN>);
			this._PHUONG_THUC_THANH_TOAN = default(EntityRef<PHUONG_THUC_THANH_TOAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayLap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayLap
		{
			get
			{
				return this._NgayLap;
			}
			set
			{
				if ((this._NgayLap != value))
				{
					this.OnNgayLapChanging(value);
					this.SendPropertyChanging();
					this._NgayLap = value;
					this.SendPropertyChanged("NgayLap");
					this.OnNgayLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiNhanHang", DbType="NVarChar(100)")]
		public string DiaChiNhanHang
		{
			get
			{
				return this._DiaChiNhanHang;
			}
			set
			{
				if ((this._DiaChiNhanHang != value))
				{
					this.OnDiaChiNhanHangChanging(value);
					this.SendPropertyChanging();
					this._DiaChiNhanHang = value;
					this.SendPropertyChanged("DiaChiNhanHang");
					this.OnDiaChiNhanHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiDonHang", DbType="Bit")]
		public System.Nullable<bool> TrangThaiDonHang
		{
			get
			{
				return this._TrangThaiDonHang;
			}
			set
			{
				if ((this._TrangThaiDonHang != value))
				{
					this.OnTrangThaiDonHangChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiDonHang = value;
					this.SendPropertyChanged("TrangThaiDonHang");
					this.OnTrangThaiDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoanKH", DbType="NChar(25) NOT NULL", CanBeNull=false)]
		public string TaiKhoanKH
		{
			get
			{
				return this._TaiKhoanKH;
			}
			set
			{
				if ((this._TaiKhoanKH != value))
				{
					if (this._KHACH_HANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiKhoanKHChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoanKH = value;
					this.SendPropertyChanged("TaiKhoanKH");
					this.OnTaiKhoanKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPTTT", DbType="Int NOT NULL")]
		public int MaPTTT
		{
			get
			{
				return this._MaPTTT;
			}
			set
			{
				if ((this._MaPTTT != value))
				{
					if (this._PHUONG_THUC_THANH_TOAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPTTTChanging(value);
					this.SendPropertyChanging();
					this._MaPTTT = value;
					this.SendPropertyChanged("MaPTTT");
					this.OnMaPTTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoanNV", DbType="NChar(25) NOT NULL", CanBeNull=false)]
		public string TaiKhoanNV
		{
			get
			{
				return this._TaiKhoanNV;
			}
			set
			{
				if ((this._TaiKhoanNV != value))
				{
					if (this._NHAN_VIEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTaiKhoanNVChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoanNV = value;
					this.SendPropertyChanged("TaiKhoanNV");
					this.OnTaiKhoanNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DON_HANG_CT_DONHANG", Storage="_CT_DONHANGs", ThisKey="MaDH", OtherKey="MaDH")]
		public EntitySet<CT_DONHANG> CT_DONHANGs
		{
			get
			{
				return this._CT_DONHANGs;
			}
			set
			{
				this._CT_DONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACH_HANG_DON_HANG", Storage="_KHACH_HANG", ThisKey="TaiKhoanKH", OtherKey="TaiKhoanKH", IsForeignKey=true)]
		public KHACH_HANG KHACH_HANG
		{
			get
			{
				return this._KHACH_HANG.Entity;
			}
			set
			{
				KHACH_HANG previousValue = this._KHACH_HANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACH_HANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACH_HANG.Entity = null;
						previousValue.DON_HANGs.Remove(this);
					}
					this._KHACH_HANG.Entity = value;
					if ((value != null))
					{
						value.DON_HANGs.Add(this);
						this._TaiKhoanKH = value.TaiKhoanKH;
					}
					else
					{
						this._TaiKhoanKH = default(string);
					}
					this.SendPropertyChanged("KHACH_HANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAN_VIEN_DON_HANG", Storage="_NHAN_VIEN", ThisKey="TaiKhoanNV", OtherKey="TaiKhoanNV", IsForeignKey=true)]
		public NHAN_VIEN NHAN_VIEN
		{
			get
			{
				return this._NHAN_VIEN.Entity;
			}
			set
			{
				NHAN_VIEN previousValue = this._NHAN_VIEN.Entity;
				if (((previousValue != value) 
							|| (this._NHAN_VIEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHAN_VIEN.Entity = null;
						previousValue.DON_HANGs.Remove(this);
					}
					this._NHAN_VIEN.Entity = value;
					if ((value != null))
					{
						value.DON_HANGs.Add(this);
						this._TaiKhoanNV = value.TaiKhoanNV;
					}
					else
					{
						this._TaiKhoanNV = default(string);
					}
					this.SendPropertyChanged("NHAN_VIEN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHUONG_THUC_THANH_TOAN_DON_HANG", Storage="_PHUONG_THUC_THANH_TOAN", ThisKey="MaPTTT", OtherKey="MaPTTT", IsForeignKey=true)]
		public PHUONG_THUC_THANH_TOAN PHUONG_THUC_THANH_TOAN
		{
			get
			{
				return this._PHUONG_THUC_THANH_TOAN.Entity;
			}
			set
			{
				PHUONG_THUC_THANH_TOAN previousValue = this._PHUONG_THUC_THANH_TOAN.Entity;
				if (((previousValue != value) 
							|| (this._PHUONG_THUC_THANH_TOAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHUONG_THUC_THANH_TOAN.Entity = null;
						previousValue.DON_HANGs.Remove(this);
					}
					this._PHUONG_THUC_THANH_TOAN.Entity = value;
					if ((value != null))
					{
						value.DON_HANGs.Add(this);
						this._MaPTTT = value.MaPTTT;
					}
					else
					{
						this._MaPTTT = default(int);
					}
					this.SendPropertyChanged("PHUONG_THUC_THANH_TOAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DONHANGs(CT_DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DON_HANG = this;
		}
		
		private void detach_CT_DONHANGs(CT_DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.DON_HANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACH_HANG")]
	public partial class KHACH_HANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TaiKhoanKH;
		
		private string _MatKhauKH;
		
		private string _HoTenKH;
		
		private System.Nullable<bool> _GioiTinhKH;
		
		private string _EmailKH;
		
		private string _DiaChiKH;
		
		private string _SdtKH;
		
		private EntitySet<DON_HANG> _DON_HANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaiKhoanKHChanging(string value);
    partial void OnTaiKhoanKHChanged();
    partial void OnMatKhauKHChanging(string value);
    partial void OnMatKhauKHChanged();
    partial void OnHoTenKHChanging(string value);
    partial void OnHoTenKHChanged();
    partial void OnGioiTinhKHChanging(System.Nullable<bool> value);
    partial void OnGioiTinhKHChanged();
    partial void OnEmailKHChanging(string value);
    partial void OnEmailKHChanged();
    partial void OnDiaChiKHChanging(string value);
    partial void OnDiaChiKHChanged();
    partial void OnSdtKHChanging(string value);
    partial void OnSdtKHChanged();
    #endregion
		
		public KHACH_HANG()
		{
			this._DON_HANGs = new EntitySet<DON_HANG>(new Action<DON_HANG>(this.attach_DON_HANGs), new Action<DON_HANG>(this.detach_DON_HANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoanKH", DbType="NChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaiKhoanKH
		{
			get
			{
				return this._TaiKhoanKH;
			}
			set
			{
				if ((this._TaiKhoanKH != value))
				{
					this.OnTaiKhoanKHChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoanKH = value;
					this.SendPropertyChanged("TaiKhoanKH");
					this.OnTaiKhoanKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhauKH", DbType="NChar(25)")]
		public string MatKhauKH
		{
			get
			{
				return this._MatKhauKH;
			}
			set
			{
				if ((this._MatKhauKH != value))
				{
					this.OnMatKhauKHChanging(value);
					this.SendPropertyChanging();
					this._MatKhauKH = value;
					this.SendPropertyChanged("MatKhauKH");
					this.OnMatKhauKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenKH", DbType="NVarChar(50)")]
		public string HoTenKH
		{
			get
			{
				return this._HoTenKH;
			}
			set
			{
				if ((this._HoTenKH != value))
				{
					this.OnHoTenKHChanging(value);
					this.SendPropertyChanging();
					this._HoTenKH = value;
					this.SendPropertyChanged("HoTenKH");
					this.OnHoTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinhKH", DbType="Bit")]
		public System.Nullable<bool> GioiTinhKH
		{
			get
			{
				return this._GioiTinhKH;
			}
			set
			{
				if ((this._GioiTinhKH != value))
				{
					this.OnGioiTinhKHChanging(value);
					this.SendPropertyChanging();
					this._GioiTinhKH = value;
					this.SendPropertyChanged("GioiTinhKH");
					this.OnGioiTinhKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailKH", DbType="NChar(100)")]
		public string EmailKH
		{
			get
			{
				return this._EmailKH;
			}
			set
			{
				if ((this._EmailKH != value))
				{
					this.OnEmailKHChanging(value);
					this.SendPropertyChanging();
					this._EmailKH = value;
					this.SendPropertyChanged("EmailKH");
					this.OnEmailKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiKH", DbType="NVarChar(100)")]
		public string DiaChiKH
		{
			get
			{
				return this._DiaChiKH;
			}
			set
			{
				if ((this._DiaChiKH != value))
				{
					this.OnDiaChiKHChanging(value);
					this.SendPropertyChanging();
					this._DiaChiKH = value;
					this.SendPropertyChanged("DiaChiKH");
					this.OnDiaChiKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SdtKH", DbType="NChar(15)")]
		public string SdtKH
		{
			get
			{
				return this._SdtKH;
			}
			set
			{
				if ((this._SdtKH != value))
				{
					this.OnSdtKHChanging(value);
					this.SendPropertyChanging();
					this._SdtKH = value;
					this.SendPropertyChanged("SdtKH");
					this.OnSdtKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACH_HANG_DON_HANG", Storage="_DON_HANGs", ThisKey="TaiKhoanKH", OtherKey="TaiKhoanKH")]
		public EntitySet<DON_HANG> DON_HANGs
		{
			get
			{
				return this._DON_HANGs;
			}
			set
			{
				this._DON_HANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DON_HANGs(DON_HANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACH_HANG = this;
		}
		
		private void detach_DON_HANGs(DON_HANG entity)
		{
			this.SendPropertyChanging();
			entity.KHACH_HANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAI_SAN_PHAM")]
	public partial class LOAI_SAN_PHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLSP;
		
		private string _TenLSP;
		
		private EntitySet<SAN_PHAM> _SAN_PHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLSPChanging(string value);
    partial void OnMaLSPChanged();
    partial void OnTenLSPChanging(string value);
    partial void OnTenLSPChanged();
    #endregion
		
		public LOAI_SAN_PHAM()
		{
			this._SAN_PHAMs = new EntitySet<SAN_PHAM>(new Action<SAN_PHAM>(this.attach_SAN_PHAMs), new Action<SAN_PHAM>(this.detach_SAN_PHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLSP", DbType="NChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLSP
		{
			get
			{
				return this._MaLSP;
			}
			set
			{
				if ((this._MaLSP != value))
				{
					this.OnMaLSPChanging(value);
					this.SendPropertyChanging();
					this._MaLSP = value;
					this.SendPropertyChanged("MaLSP");
					this.OnMaLSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLSP", DbType="NVarChar(50)")]
		public string TenLSP
		{
			get
			{
				return this._TenLSP;
			}
			set
			{
				if ((this._TenLSP != value))
				{
					this.OnTenLSPChanging(value);
					this.SendPropertyChanging();
					this._TenLSP = value;
					this.SendPropertyChanged("TenLSP");
					this.OnTenLSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_SAN_PHAM_SAN_PHAM", Storage="_SAN_PHAMs", ThisKey="MaLSP", OtherKey="MaLSP")]
		public EntitySet<SAN_PHAM> SAN_PHAMs
		{
			get
			{
				return this._SAN_PHAMs;
			}
			set
			{
				this._SAN_PHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SAN_PHAMs(SAN_PHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAI_SAN_PHAM = this;
		}
		
		private void detach_SAN_PHAMs(SAN_PHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAI_SAN_PHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHAN_VIEN")]
	public partial class NHAN_VIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TaiKhoanNV;
		
		private string _MatKhau;
		
		private string _HoTenNV;
		
		private int _MaCV;
		
		private EntitySet<DON_HANG> _DON_HANGs;
		
		private EntityRef<CHUC_VU> _CHUC_VU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTaiKhoanNVChanging(string value);
    partial void OnTaiKhoanNVChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnHoTenNVChanging(string value);
    partial void OnHoTenNVChanged();
    partial void OnMaCVChanging(int value);
    partial void OnMaCVChanged();
    #endregion
		
		public NHAN_VIEN()
		{
			this._DON_HANGs = new EntitySet<DON_HANG>(new Action<DON_HANG>(this.attach_DON_HANGs), new Action<DON_HANG>(this.detach_DON_HANGs));
			this._CHUC_VU = default(EntityRef<CHUC_VU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoanNV", DbType="NChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TaiKhoanNV
		{
			get
			{
				return this._TaiKhoanNV;
			}
			set
			{
				if ((this._TaiKhoanNV != value))
				{
					this.OnTaiKhoanNVChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoanNV = value;
					this.SendPropertyChanged("TaiKhoanNV");
					this.OnTaiKhoanNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NChar(25)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTenNV", DbType="NVarChar(50)")]
		public string HoTenNV
		{
			get
			{
				return this._HoTenNV;
			}
			set
			{
				if ((this._HoTenNV != value))
				{
					this.OnHoTenNVChanging(value);
					this.SendPropertyChanging();
					this._HoTenNV = value;
					this.SendPropertyChanged("HoTenNV");
					this.OnHoTenNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCV", DbType="Int NOT NULL")]
		public int MaCV
		{
			get
			{
				return this._MaCV;
			}
			set
			{
				if ((this._MaCV != value))
				{
					if (this._CHUC_VU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaCVChanging(value);
					this.SendPropertyChanging();
					this._MaCV = value;
					this.SendPropertyChanged("MaCV");
					this.OnMaCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAN_VIEN_DON_HANG", Storage="_DON_HANGs", ThisKey="TaiKhoanNV", OtherKey="TaiKhoanNV")]
		public EntitySet<DON_HANG> DON_HANGs
		{
			get
			{
				return this._DON_HANGs;
			}
			set
			{
				this._DON_HANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CHUC_VU_NHAN_VIEN", Storage="_CHUC_VU", ThisKey="MaCV", OtherKey="MaCV", IsForeignKey=true)]
		public CHUC_VU CHUC_VU
		{
			get
			{
				return this._CHUC_VU.Entity;
			}
			set
			{
				CHUC_VU previousValue = this._CHUC_VU.Entity;
				if (((previousValue != value) 
							|| (this._CHUC_VU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CHUC_VU.Entity = null;
						previousValue.NHAN_VIENs.Remove(this);
					}
					this._CHUC_VU.Entity = value;
					if ((value != null))
					{
						value.NHAN_VIENs.Add(this);
						this._MaCV = value.MaCV;
					}
					else
					{
						this._MaCV = default(int);
					}
					this.SendPropertyChanged("CHUC_VU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DON_HANGs(DON_HANG entity)
		{
			this.SendPropertyChanging();
			entity.NHAN_VIEN = this;
		}
		
		private void detach_DON_HANGs(DON_HANG entity)
		{
			this.SendPropertyChanging();
			entity.NHAN_VIEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHUONG_THUC_THANH_TOAN")]
	public partial class PHUONG_THUC_THANH_TOAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaPTTT;
		
		private string _TenPTTT;
		
		private EntitySet<DON_HANG> _DON_HANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPTTTChanging(int value);
    partial void OnMaPTTTChanged();
    partial void OnTenPTTTChanging(string value);
    partial void OnTenPTTTChanged();
    #endregion
		
		public PHUONG_THUC_THANH_TOAN()
		{
			this._DON_HANGs = new EntitySet<DON_HANG>(new Action<DON_HANG>(this.attach_DON_HANGs), new Action<DON_HANG>(this.detach_DON_HANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPTTT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaPTTT
		{
			get
			{
				return this._MaPTTT;
			}
			set
			{
				if ((this._MaPTTT != value))
				{
					this.OnMaPTTTChanging(value);
					this.SendPropertyChanging();
					this._MaPTTT = value;
					this.SendPropertyChanged("MaPTTT");
					this.OnMaPTTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPTTT", DbType="NVarChar(50)")]
		public string TenPTTT
		{
			get
			{
				return this._TenPTTT;
			}
			set
			{
				if ((this._TenPTTT != value))
				{
					this.OnTenPTTTChanging(value);
					this.SendPropertyChanging();
					this._TenPTTT = value;
					this.SendPropertyChanged("TenPTTT");
					this.OnTenPTTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHUONG_THUC_THANH_TOAN_DON_HANG", Storage="_DON_HANGs", ThisKey="MaPTTT", OtherKey="MaPTTT")]
		public EntitySet<DON_HANG> DON_HANGs
		{
			get
			{
				return this._DON_HANGs;
			}
			set
			{
				this._DON_HANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DON_HANGs(DON_HANG entity)
		{
			this.SendPropertyChanging();
			entity.PHUONG_THUC_THANH_TOAN = this;
		}
		
		private void detach_DON_HANGs(DON_HANG entity)
		{
			this.SendPropertyChanging();
			entity.PHUONG_THUC_THANH_TOAN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SAN_PHAM")]
	public partial class SAN_PHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaSP;
		
		private string _TenSP;
		
		private System.Nullable<System.DateTime> _NgayThem;
		
		private System.Nullable<System.DateTime> _NgayCapNhat;
		
		private string _MoTa;
		
		private System.Nullable<int> _Gia;
		
		private string _HinhAnh;
		
		private string _MaLSP;
		
		private EntitySet<CT_SANPHAM> _CT_SANPHAMs;
		
		private EntityRef<LOAI_SAN_PHAM> _LOAI_SAN_PHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(int value);
    partial void OnMaSPChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnNgayThemChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThemChanged();
    partial void OnNgayCapNhatChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhatChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnGiaChanging(System.Nullable<int> value);
    partial void OnGiaChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnMaLSPChanging(string value);
    partial void OnMaLSPChanged();
    #endregion
		
		public SAN_PHAM()
		{
			this._CT_SANPHAMs = new EntitySet<CT_SANPHAM>(new Action<CT_SANPHAM>(this.attach_CT_SANPHAMs), new Action<CT_SANPHAM>(this.detach_CT_SANPHAMs));
			this._LOAI_SAN_PHAM = default(EntityRef<LOAI_SAN_PHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(100)")]
		public string TenSP
		{
			get
			{
				return this._TenSP;
			}
			set
			{
				if ((this._TenSP != value))
				{
					this.OnTenSPChanging(value);
					this.SendPropertyChanging();
					this._TenSP = value;
					this.SendPropertyChanged("TenSP");
					this.OnTenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThem", DbType="Date")]
		public System.Nullable<System.DateTime> NgayThem
		{
			get
			{
				return this._NgayThem;
			}
			set
			{
				if ((this._NgayThem != value))
				{
					this.OnNgayThemChanging(value);
					this.SendPropertyChanging();
					this._NgayThem = value;
					this.SendPropertyChanged("NgayThem");
					this.OnNgayThemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhat", DbType="Date")]
		public System.Nullable<System.DateTime> NgayCapNhat
		{
			get
			{
				return this._NgayCapNhat;
			}
			set
			{
				if ((this._NgayCapNhat != value))
				{
					this.OnNgayCapNhatChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhat = value;
					this.SendPropertyChanged("NgayCapNhat");
					this.OnNgayCapNhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(200)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Int")]
		public System.Nullable<int> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NChar(50)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLSP", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string MaLSP
		{
			get
			{
				return this._MaLSP;
			}
			set
			{
				if ((this._MaLSP != value))
				{
					if (this._LOAI_SAN_PHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLSPChanging(value);
					this.SendPropertyChanging();
					this._MaLSP = value;
					this.SendPropertyChanged("MaLSP");
					this.OnMaLSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SAN_PHAM_CT_SANPHAM", Storage="_CT_SANPHAMs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<CT_SANPHAM> CT_SANPHAMs
		{
			get
			{
				return this._CT_SANPHAMs;
			}
			set
			{
				this._CT_SANPHAMs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAI_SAN_PHAM_SAN_PHAM", Storage="_LOAI_SAN_PHAM", ThisKey="MaLSP", OtherKey="MaLSP", IsForeignKey=true)]
		public LOAI_SAN_PHAM LOAI_SAN_PHAM
		{
			get
			{
				return this._LOAI_SAN_PHAM.Entity;
			}
			set
			{
				LOAI_SAN_PHAM previousValue = this._LOAI_SAN_PHAM.Entity;
				if (((previousValue != value) 
							|| (this._LOAI_SAN_PHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAI_SAN_PHAM.Entity = null;
						previousValue.SAN_PHAMs.Remove(this);
					}
					this._LOAI_SAN_PHAM.Entity = value;
					if ((value != null))
					{
						value.SAN_PHAMs.Add(this);
						this._MaLSP = value.MaLSP;
					}
					else
					{
						this._MaLSP = default(string);
					}
					this.SendPropertyChanged("LOAI_SAN_PHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_SANPHAMs(CT_SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.SAN_PHAM = this;
		}
		
		private void detach_CT_SANPHAMs(CT_SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.SAN_PHAM = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SIZE")]
	public partial class SIZE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSize;
		
		private string _TenSize;
		
		private EntitySet<CT_SANPHAM> _CT_SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSizeChanging(string value);
    partial void OnMaSizeChanged();
    partial void OnTenSizeChanging(string value);
    partial void OnTenSizeChanged();
    #endregion
		
		public SIZE()
		{
			this._CT_SANPHAMs = new EntitySet<CT_SANPHAM>(new Action<CT_SANPHAM>(this.attach_CT_SANPHAMs), new Action<CT_SANPHAM>(this.detach_CT_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSize", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSize
		{
			get
			{
				return this._MaSize;
			}
			set
			{
				if ((this._MaSize != value))
				{
					this.OnMaSizeChanging(value);
					this.SendPropertyChanging();
					this._MaSize = value;
					this.SendPropertyChanged("MaSize");
					this.OnMaSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSize", DbType="NVarChar(20)")]
		public string TenSize
		{
			get
			{
				return this._TenSize;
			}
			set
			{
				if ((this._TenSize != value))
				{
					this.OnTenSizeChanging(value);
					this.SendPropertyChanging();
					this._TenSize = value;
					this.SendPropertyChanged("TenSize");
					this.OnTenSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SIZE_CT_SANPHAM", Storage="_CT_SANPHAMs", ThisKey="MaSize", OtherKey="MaSize")]
		public EntitySet<CT_SANPHAM> CT_SANPHAMs
		{
			get
			{
				return this._CT_SANPHAMs;
			}
			set
			{
				this._CT_SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_SANPHAMs(CT_SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.SIZE = this;
		}
		
		private void detach_CT_SANPHAMs(CT_SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.SIZE = null;
		}
	}
}
#pragma warning restore 1591
